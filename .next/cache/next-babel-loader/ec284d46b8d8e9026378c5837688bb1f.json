{"ast":null,"code":"var _jsxFileName = \"/Users/helmutp/Desktop/DEV/playground/personal-blog/pages/post/[id].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from \"next/router\";\nimport ErrorPage from \"next/error\";\nimport Container from \"../../components/container\";\nimport PostBody from \"../../components/post-body\";\nimport MoreStories from \"../../components/more-stories\";\nimport Header from \"../../components/header\";\nimport PostHeader from \"../../components/post-header\";\nimport SectionSeparator from \"../../components/section-separator\";\nimport Layout from \"../../components/layout\";\nimport PostTitle from \"../../components/post-title\";\nimport Head from \"next/head\";\nimport { CMS_NAME } from \"../../lib/constants\";\nimport markdownToHtml from \"../../lib/markdownToHtml\";\nexport var __N_SSG = true;\nexport default function Post(_ref) {\n  var _post$;\n\n  var post = _ref.post,\n      morePosts = _ref.morePosts,\n      preview = _ref.preview;\n  var router = useRouter();\n  console.log(\"POST\", post);\n\n  if (!router.isFallback && !((_post$ = post[0]) === null || _post$ === void 0 ? void 0 : _post$.id)) {\n    return __jsx(ErrorPage, {\n      statusCode: 404,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return __jsx(Layout, {\n    preview: preview,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, __jsx(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, __jsx(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }), router.isFallback ? __jsx(PostTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  }, \"Loading\\u2026\") : __jsx(React.Fragment, null, __jsx(\"article\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 15\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  }, post.title, \" | Next.js Blog Example with \", CMS_NAME), __jsx(\"meta\", {\n    property: \"og:image\",\n    content: post.ogImage.url,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  })), __jsx(PostHeader, {\n    title: post.title,\n    coverImage: post.coverImage,\n    date: post.date,\n    author: post.author,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 15\n    }\n  }), __jsx(PostBody, {\n    content: post.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 15\n    }\n  })), __jsx(SectionSeparator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }), morePosts.length > 0 && __jsx(MoreStories, {\n    posts: morePosts,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 38\n    }\n  }))));\n}","map":{"version":3,"sources":["/Users/helmutp/Desktop/DEV/playground/personal-blog/pages/post/[id].js"],"names":["useRouter","ErrorPage","Container","PostBody","MoreStories","Header","PostHeader","SectionSeparator","Layout","PostTitle","Head","CMS_NAME","markdownToHtml","Post","post","morePosts","preview","router","console","log","isFallback","id","title","ogImage","url","coverImage","date","author","content","length"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AAEA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,OAAOC,cAAP,MAA2B,0BAA3B;;AAEA,eAAe,SAASC,IAAT,OAA4C;AAAA;;AAAA,MAA5BC,IAA4B,QAA5BA,IAA4B;AAAA,MAAtBC,SAAsB,QAAtBA,SAAsB;AAAA,MAAXC,OAAW,QAAXA,OAAW;AACzD,MAAMC,MAAM,GAAGjB,SAAS,EAAxB;AACAkB,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBL,IAApB;;AACA,MAAI,CAACG,MAAM,CAACG,UAAR,IAAsB,YAACN,IAAI,CAAC,CAAD,CAAL,2CAAC,OAASO,EAAV,CAA1B,EAAwC;AACtC,WAAO,MAAC,SAAD;AAAW,MAAA,UAAU,EAAE,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AACD,SACE,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAEL,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEGC,MAAM,CAACG,UAAP,GACC,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADD,GAGC,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,IAAI,CAACQ,KADR,mCAC4CX,QAD5C,CADF,EAIE;AAAM,IAAA,QAAQ,EAAC,UAAf;AAA0B,IAAA,OAAO,EAAEG,IAAI,CAACS,OAAL,CAAaC,GAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF,EAOE,MAAC,UAAD;AACE,IAAA,KAAK,EAAEV,IAAI,CAACQ,KADd;AAEE,IAAA,UAAU,EAAER,IAAI,CAACW,UAFnB;AAGE,IAAA,IAAI,EAAEX,IAAI,CAACY,IAHb;AAIE,IAAA,MAAM,EAAEZ,IAAI,CAACa,MAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,EAaE,MAAC,QAAD;AAAU,IAAA,OAAO,EAAEb,IAAI,CAACc,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbF,CADF,EAgBE,MAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBF,EAiBGb,SAAS,CAACc,MAAV,GAAmB,CAAnB,IAAwB,MAAC,WAAD;AAAa,IAAA,KAAK,EAAEd,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjB3B,CALJ,CADF,CADF;AA8BD","sourcesContent":["import { useRouter } from \"next/router\";\nimport ErrorPage from \"next/error\";\nimport Container from \"../../components/container\";\nimport PostBody from \"../../components/post-body\";\nimport MoreStories from \"../../components/more-stories\";\nimport Header from \"../../components/header\";\nimport PostHeader from \"../../components/post-header\";\nimport SectionSeparator from \"../../components/section-separator\";\nimport Layout from \"../../components/layout\";\nimport { getPostDataById, getAllPostsWithId } from \"../../lib/api\";\nimport PostTitle from \"../../components/post-title\";\nimport Head from \"next/head\";\nimport { CMS_NAME } from \"../../lib/constants\";\nimport markdownToHtml from \"../../lib/markdownToHtml\";\n\nexport default function Post({ post, morePosts, preview }) {\n  const router = useRouter();\n  console.log(\"POST\", post);\n  if (!router.isFallback && !post[0]?.id) {\n    return <ErrorPage statusCode={404} />;\n  }\n  return (\n    <Layout preview={preview}>\n      <Container>\n        <Header />\n        {router.isFallback ? (\n          <PostTitle>Loadingâ€¦</PostTitle>\n        ) : (\n          <>\n            <article>\n              <Head>\n                <title>\n                  {post.title} | Next.js Blog Example with {CMS_NAME}\n                </title>\n                <meta property=\"og:image\" content={post.ogImage.url} />\n              </Head>\n              <PostHeader\n                title={post.title}\n                coverImage={post.coverImage}\n                date={post.date}\n                author={post.author}\n              />\n              <PostBody content={post.content} />\n            </article>\n            <SectionSeparator />\n            {morePosts.length > 0 && <MoreStories posts={morePosts} />}\n          </>\n        )}\n      </Container>\n    </Layout>\n  );\n}\n\nexport async function getStaticProps({ params }) {\n  const data = await getPostDataById(params.id);\n\n  return {\n    props: {\n      post: {\n        ...data?.content\n      }\n    }\n  };\n}\n\nexport async function getStaticPaths() {\n  const allPosts = await getAllPostsWithId();\n\n  return {\n    paths: allPosts?.map(post => {\n      return `/post/${post.content[0].id}`;\n    }),\n    fallback: true\n  };\n}\n"]},"metadata":{},"sourceType":"module"}