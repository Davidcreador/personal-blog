{"ast":null,"code":"var _jsxFileName = \"/Users/helmutp/Desktop/DEV/workspace/playground/personal-blog/pages/posts/[id].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useRouter } from \"next/router\";\nimport ErrorPage from \"next/error\";\nimport readTimeEstimate from \"read-time-estimate\";\nimport Container from \"../../components/container\";\nimport PostBody from \"../../components/post-body\";\nimport MoreStories from \"../../components/more-stories\";\nimport Header from \"../../components/header\";\nimport PostHeader from \"../../components/post-header\";\nimport SectionSeparator from \"../../components/section-separator\";\nimport Layout from \"../../components/layout\";\nimport { getPostDataById, getAllPostsWithId } from \"../../lib/api\";\nimport PostTitle from \"../../components/post-title\";\nimport Head from \"next/head\";\nimport { CMS_NAME } from \"../../lib/constants\";\nimport markdownToHtml from \"../../lib/markdownToHtml\";\n\nfunction readTime(content) {\n  const {\n    humanizedDuration,\n    duration,\n    totalWords,\n    wordTime\n  } = readTimeEstimate(content);\n  return {\n    humanizedDuration,\n    duration,\n    totalWords,\n    wordTime\n  };\n}\n\nexport default function Post({\n  post\n}) {\n  const router = useRouter();\n\n  if (!router.isFallback && !(post === null || post === void 0 ? void 0 : post.slug)) {\n    return __jsx(ErrorPage, {\n      statusCode: 404,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 12\n      }\n    });\n  }\n\n  const readTimeData = readTime(post.postContent);\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, __jsx(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, __jsx(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }), router.isFallback ? __jsx(PostTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, \"Loading\\u2026\") : __jsx(React.Fragment, null, __jsx(\"article\", {\n    className: \"flex flex-col justify-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 15\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, post.title, \" | Next.js Blog Example with \", CMS_NAME)), __jsx(PostHeader, {\n    readTime: readTimeData,\n    title: post.title,\n    coverImage: post.coverImage,\n    date: post.createdAt,\n    author: post.author,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 15\n    }\n  }), __jsx(PostBody, {\n    content: post.postContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 15\n    }\n  })), __jsx(SectionSeparator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }))));\n}\nexport async function getStaticPaths() {\n  const allPosts = await getAllPostsWithId();\n  const paths = allPosts === null || allPosts === void 0 ? void 0 : allPosts.map(post => `/posts/${post.id}`);\n  return {\n    paths,\n    fallback: true\n  };\n}\nexport async function getStaticProps({\n  params\n}) {\n  const data = await getPostDataById(params.id);\n  return {\n    props: {\n      post: _objectSpread({}, data === null || data === void 0 ? void 0 : data.content[0])\n    }\n  };\n}","map":{"version":3,"sources":["/Users/helmutp/Desktop/DEV/workspace/playground/personal-blog/pages/posts/[id].js"],"names":["useRouter","ErrorPage","readTimeEstimate","Container","PostBody","MoreStories","Header","PostHeader","SectionSeparator","Layout","getPostDataById","getAllPostsWithId","PostTitle","Head","CMS_NAME","markdownToHtml","readTime","content","humanizedDuration","duration","totalWords","wordTime","Post","post","router","isFallback","slug","readTimeData","postContent","title","coverImage","createdAt","author","getStaticPaths","allPosts","paths","map","id","fallback","getStaticProps","params","data","props"],"mappings":"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","sourcesContent":["import { useRouter } from \"next/router\";\nimport ErrorPage from \"next/error\";\nimport readTimeEstimate from \"read-time-estimate\";\nimport Container from \"../../components/container\";\nimport PostBody from \"../../components/post-body\";\nimport MoreStories from \"../../components/more-stories\";\nimport Header from \"../../components/header\";\nimport PostHeader from \"../../components/post-header\";\nimport SectionSeparator from \"../../components/section-separator\";\nimport Layout from \"../../components/layout\";\nimport { getPostDataById, getAllPostsWithId } from \"../../lib/api\";\nimport PostTitle from \"../../components/post-title\";\nimport Head from \"next/head\";\nimport { CMS_NAME } from \"../../lib/constants\";\nimport markdownToHtml from \"../../lib/markdownToHtml\";\n\nfunction readTime(content) {\n  const {\n    humanizedDuration,\n    duration,\n    totalWords,\n    wordTime\n  } = readTimeEstimate(content);\n\n  return {\n    humanizedDuration,\n    duration,\n    totalWords,\n    wordTime\n  };\n}\n\nexport default function Post({ post }) {\n  const router = useRouter();\n\n  if (!router.isFallback && !post?.slug) {\n    return <ErrorPage statusCode={404} />;\n  }\n\n  const readTimeData = readTime(post.postContent);\n\n  return (\n    <Layout>\n      <Container>\n        <Header />\n        {router.isFallback ? (\n          <PostTitle>Loadingâ€¦</PostTitle>\n        ) : (\n          <>\n            <article className=\"flex flex-col justify-center\">\n              <Head>\n                <title>\n                  {post.title} | Next.js Blog Example with {CMS_NAME}\n                </title>\n              </Head>\n              <PostHeader\n                readTime={readTimeData}\n                title={post.title}\n                coverImage={post.coverImage}\n                date={post.createdAt}\n                author={post.author}\n              />\n              <PostBody content={post.postContent} />\n            </article>\n            <SectionSeparator />\n          </>\n        )}\n      </Container>\n    </Layout>\n  );\n}\n\nexport async function getStaticPaths() {\n  const allPosts = await getAllPostsWithId();\n  const paths = allPosts?.map(post => `/posts/${post.id}`);\n\n  return {\n    paths,\n    fallback: true\n  };\n}\n\nexport async function getStaticProps({ params }) {\n  const data = await getPostDataById(params.id);\n\n  return {\n    props: {\n      post: {\n        ...data?.content[0]\n      }\n    }\n  };\n}\n"]},"metadata":{},"sourceType":"module"}